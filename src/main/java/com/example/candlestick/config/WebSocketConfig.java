package com.example.candlestick.config;

import com.fasterxml.jackson.databind.ObjectMapper;
import org.springframework.context.annotation.Configuration;
import org.springframework.messaging.converter.MappingJackson2MessageConverter;
import org.springframework.messaging.simp.config.MessageBrokerRegistry;
import org.springframework.context.annotation.Bean;
import org.springframework.messaging.converter.MessageConverter;
import org.springframework.web.socket.config.annotation.*;

import java.util.List;

@Configuration
@EnableWebSocketMessageBroker
public class WebSocketConfig implements WebSocketMessageBrokerConfigurer {

    @Override
    public void registerStompEndpoints(StompEndpointRegistry registry) {
        // –≠—Ç–æ —Ç–≤–æ–π endpoint –¥–ª—è index.html
        registry.addEndpoint("/ws").setAllowedOriginPatterns("*").withSockJS();
    }

    @Override
    public void configureMessageBroker(MessageBrokerRegistry registry) {
        registry.enableSimpleBroker("/topic"); // –ö–ª–∏–µ–Ω—Ç—ã –ø–æ–¥–ø–∏—Å—ã–≤–∞—é—Ç—Å—è –Ω–∞ /topic/*
        registry.setApplicationDestinationPrefixes("/app"); // –û—Ç–ø—Ä–∞–≤–∫–∞ –æ—Ç –∫–ª–∏–µ–Ω—Ç–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä —á–µ—Ä–µ–∑ /app/*
    }

    // üëá –î–æ–±–∞–≤–ª—è–µ–º Jackson-–∫–æ–Ω–≤–µ—Ä—Ç–µ—Ä
    @Override
    public boolean configureMessageConverters(List<MessageConverter> messageConverters) {
        messageConverters.add(new MappingJackson2MessageConverter());
        return false; // false = –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –¥–µ—Ñ–æ–ª—Ç–Ω—ã–µ –∫–æ–Ω–≤–µ—Ä—Ç–µ—Ä—ã —Ç–æ–∂–µ
    }
}